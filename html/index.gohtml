<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>CSS436 Program 4</title>
</head>
<body>
<div>
    <h1>CSS436 Program 4</h1>
    <fieldset>
        <legend>Upload/Clear</legend>
        <form id="load_form" action="javascript:loadFunc().then()">
            <div>
                <label>
                    URL of input file:
                    <input type="text" name="url">
                    <input type="submit" value="Load" id="url_submit">
                </label>
            </div>
        </form>
        <form action="javascript:clearFunc().then()">
            <div>
                <label>
                    Clear data
                    <input type="submit" value="Clear" id="clear_submit">
                </label>
            </div>
        </form>
    </fieldset>
    <fieldset>
        <legend>Query</legend>
        <form id="query_form" action="javascript:queryFunc().then()">
            <div>
                <label>
                    First name:
                    <input type="text" name="first">
                </label>
            </div>
            <div>
                <label>
                    Last name:
                    <input type="text" name="last">
                </label>
            </div>
            <div>
                <input type="submit" value="Query" id="query_submit">
            </div>
        </form>
    </fieldset>
    <fieldset>
        <legend>Result</legend>
        <div id="result-status"><p></p></div>
        <div id="result-output"></div>
    </fieldset>
</div>
<script type="text/javascript">
    async function helper(request, init) {
        const uButton = document.getElementById("url_submit");
        const cButton = document.getElementById("clear_submit");
        const qButton = document.getElementById("query_submit");

        uButton.disabled = true;
        cButton.disabled = true;
        qButton.disabled = true;

        const status = document.getElementById("result-status");
        const output = document.getElementById("result-output");
        status.innerHTML = "<p>Status: waiting...</p>";
        output.innerHTML = "";

        fetch(request, init)
            .then(function (response) {
                return response.json();
            })
            .then(function (j) {
                let statStr;
                if (j["success"]) {
                    statStr = "success";
                } else {
                    statStr = "fail";
                }
                status.innerHTML = "<p>Status: " + statStr + "</p>";

                if (j["is_query"] && j["success"] && j["query_res"] != null) {
                    let list = document.createElement("ul");
                    j["query_res"].forEach((line) => {
                        let liElem = document.createElement("li");
                        liElem.innerText = line;
                        list.appendChild(liElem);
                    })
                    output.appendChild(list);
                    return;
                }

                output.innerHTML = "<p>" + j["msg"] + "</p>";
            })
            .catch(function (err) {
                console.debug(err);
                status.innerHTML = "<p>Unknown error occurred</p>";
            })

        uButton.disabled = false;
        cButton.disabled = false;
        qButton.disabled = false;
    }

    async function loadFunc() {
        const url = document.getElementById("load_form");
        const urlData = new FormData(url);
        await helper("/load", {
            method: "POST",
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams(urlData)
        });
    }

    async function clearFunc() {
        await helper("/clear", {
            method: "POST",
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
        });
    }

    async function queryFunc() {
        const q = document.getElementById("query_form");
        const qData = new FormData(q);
        await helper("/q?" + new URLSearchParams(qData), {
            method: "GET",
        });
    }
</script>
</body>
</html>
